<button id="home-button" class="home-button no-print" aria-label="Go to homepage">
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
        <polyline points="9 22 9 12 15 12 15 22"></polyline>
    </svg>
</button>

<section class="section" style="margin: 0; padding: 0;">
    <div class="container is-max-desktop">
        <div class="content">
            <div class="zoom-control no-print">
                <button class="zoom-close" aria-label="Hide zoom controls">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <line x1="18" y1="6" x2="6" y2="18"></line>
                        <line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </button>
                <p class="zoom-explanation">
                    This essay is <a href="/telescopic-content/">telescopic</a>. It can shrink or expand, depending on how much attention you are willing to give. <br /> 
                    {{#if isGenerating}}
                        <div class="version-info">
                            Generating {{currentZoom.name}} version...
                        </div>
                    {{else if (lookup essay.versions zoomLevel)}}
                            {{#if (lookup (lookup essay.versions zoomLevel) 'isOriginal')}}
                                This is the original version ({{lookup (lookup essay.versions zoomLevel) 'wordCount'}} words).
                            {{else if (lookup (lookup essay.versions zoomLevel) 'isHumanVetted')}}
                                This is an AI-generated, human-reviewed version ({{lookup (lookup essay.versions zoomLevel) 'wordCount'}} words).
                            {{else}}
                                This is an AI-generated version ({{lookup (lookup essay.versions zoomLevel) 'wordCount'}} words, not yet human-reviewed).
                            {{/if}}

                            <span><a href="#" class="show-sizes-link">Show other sizes</a>.</span>
                    {{else}}
                        <div class="version-info">
                            {{currentZoom.name}} version not yet generated.
                        </div>
                    {{/if}}
                </p>
                <div class="zoom-stuff hidden">
                    <div class="zoom-slider">
                        {{#each zoomLevels}}
                            <a href="{{#if (lookup ../essay.versions @key)}}?zoom={{@key}}{{else}}#{{/if}}" 
                            class="zoom-level 
                                    {{#if (eq @key ../zoomLevel)}}active{{/if}}
                                    {{#if (eq @key ../naturalZoomLevel)}}natural{{/if}}
                                    {{#if (lookup (lookup ../essay.versions @key) 'isOriginal')}}original{{/if}}
                                    {{#unless (lookup ../essay.versions @key)}}not-generated{{/unless}}
                                    {{#if (lookup (lookup ../essay.versions @key))}}
                                        {{#unless (lookup (lookup ../essay.versions @key) 'isHumanVetted')}}
                                            ai
                                        {{/unless}}
                                    {{/if}}"
                            data-zoom="{{@key}}"
                            {{#unless (lookup ../essay.versions @key)}}
                            data-needs-generation="true"
                            {{/unless}}
                            title="{{this.description}} 
                                    {{#if (lookup ../essay.versions @key)}}
                                        ({{lookup (lookup ../essay.versions @key) 'wordCount'}} words)
                                        {{#if (lookup (lookup ../essay.versions @key) 'isOriginal')}}
                                            {{#if ../../essay.isAIGenerated}}
                                                - AI-Generated Original
                                            {{else}}
                                                - Original Version
                                            {{/if}}
                                        {{else if (lookup (lookup ../essay.versions @key) 'isHumanVetted')}}
                                            - Human-Reviewed Version
                                        {{else}}
                                            - AI-Generated
                                        {{/if}}
                                    {{/if}}">
                                {{this.name}}
                                {{#if (lookup (lookup ../essay.versions @key) 'isHumanVetted')}}
                                    <span class="status"></span>
                                {{/if}}
                            </a>
                        {{/each}}
                    </div>
                </div>
                    
            </div>


            <h1 class="essay-title">{{title}}</h1>
            {{#if essay.isAIGenerated}}
                <div class="ai-generated-notice">
                    This essay was written by a well-educated robot from the 404 page. There was no essay with this title, but somebody (was it you?) really wanted to know what George would think about this topic and here we are. A robot wrote this based on George's other writings. Don't take too seriously. But then again, why would you take seriously anything George writes?
                </div>
            {{/if}}
            
            {{#if isGenerating}}
                {{{html}}}
            {{else}}
                {{#if (eq zoomLevel '1m')}}
                    <div class="tldr-header">TL;DR</div>
                {{/if}}
                {{{html}}}
            {{/if}}
            
            {{#if timestamp}}
                <div class="essay-date">
                    <hr />
                    Original published: {{formatDate timestamp}}
                </div>
            {{/if}}
        </div>
    </div>
</section>

<!-- Add this modal markup after the section -->
<div id="captcha-modal" class="modal">
    <div class="modal-background"></div>
    <div class="modal-content">
        <div class="box" style="text-align: center;">
            <h2>Human Verification Required</h2>
            <p>Before generating a new version, please verify that you're human.</p>
            <div class="captcha-container" id="captcha-container"></div>
            <p class="is-size-7">Funny how we need to verify you're human before we can get a robot to write for you. Isn't it?</p>
        </div>
    </div>
    <button class="modal-close is-large" aria-label="close"></button>
</div>

{{#if isGenerating}}
<script>
    function checkVersion() {
        fetch('/{{slug}}/check-version?zoom={{zoomLevel}}')
            .then(response => response.json())
            .then(data => {
                if (data.exists) {
                    window.location.reload();
                }
            })
            .catch(console.error);
    }

    // Poll every 2 seconds
    const pollInterval = setInterval(checkVersion, 2000);

    // Stop polling after 60 seconds (30 attempts)
    setTimeout(() => {
        clearInterval(pollInterval);
        // Update the generating message if we timeout
        const generating = document.querySelector('.generating');
        if (generating) {
            generating.innerHTML = `
                <h2>Taking longer than expected...</h2>
                <p>Please refresh the page manually to check if the version is ready.</p>
            `;
        }
    }, 60000);
</script>
{{else}}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize reCAPTCHA
        window.onRecaptchaLoad = function() {
            grecaptcha.render('captcha-container', {
                'sitekey': '6Lcd0M8qAAAAAIcq38vEPUsdZ9clKiunuZAF_cy8',
                'callback': onCaptchaSuccess,
                'expired-callback': onCaptchaExpired
            });
        };

        const modal = document.getElementById('captcha-modal');
        let pendingZoomLevel = null;

        // Handle clicks on zoom levels that need generation
        document.querySelectorAll('.zoom-level[data-needs-generation="true"]').forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                pendingZoomLevel = this.getAttribute('data-zoom');
                modal.classList.add('is-active');
                grecaptcha.reset();
            });
        });

        // Handle modal close
        document.querySelector('.modal-close').addEventListener('click', function() {
            modal.classList.remove('is-active');
            pendingZoomLevel = null;
        });

        document.querySelector('.modal-background').addEventListener('click', function() {
            modal.classList.remove('is-active');
            pendingZoomLevel = null;
        });

        async function onCaptchaSuccess(token) {
            if (!pendingZoomLevel) return;
            
            try {
                const response = await fetch(`/{{slug}}/generate-version`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        captchaToken: token,
                        zoomLevel: pendingZoomLevel
                    })
                });

                if (response.ok) {
                    // Redirect to the generating page
                    window.location.href = `?zoom=${pendingZoomLevel}&generating=true`;
                } else {
                    throw new Error('Generation failed');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to start generation. Please try again.');
                modal.classList.remove('is-active');
                grecaptcha.reset();
            }
        }

        function onCaptchaExpired() {
            pendingZoomLevel = null;
        }
    });
</script>
<script src="https://www.google.com/recaptcha/api.js?onload=onRecaptchaLoad&render=explicit" async defer></script>
{{/if}}